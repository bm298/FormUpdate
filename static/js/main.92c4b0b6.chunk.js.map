{"version":3,"sources":["formSite/git-sheet.pdf","logo.svg","formSite/modalForm.js","formSite/formsMock.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","modalForm","props","capitalizedName","title","charAt","toUpperCase","slice","open","react_default","a","createElement","className","onClick","close","index_esm","id","href","gitSheet","download","Nav","Content","_React$useState","React","useState","_React$useState2","Object","slicedToArray","openModaL","setOpenModal","_React$useState3","firstName","lastName","email","password","passwordConfirm","joinMembership","_React$useState4","formData","setFormData","handleChange","event","_event$target","target","name","value","type","checked","prevFormData","objectSpread","defineProperty","onSubmit","preventDefault","length","includes","prevModal","console","log","placeholder","onChange","htmlFor","Footer","formSite","App","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.92c4b0b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/git-sheet.1fcf7039.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\nimport {BsPatchCheck} from 'react-icons/bs';\r\nimport gitSheet from '../formSite/git-sheet.pdf'\r\nimport './modalFormCss.css';\r\n\r\n\r\nexport default function modalForm(props) {\r\n\r\n    const capitalizedName = props.title.charAt(0).toUpperCase() + props.title.slice(1)\r\n\r\n    if (!props.open){\r\n        return null\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"modalContainer\">\r\n            <div className=\"closeBtn\"><span className=\"closeBtnSpan\" onClick={props.close}>âœ–</span></div>\r\n                <div className=\"checkContainer\"><BsPatchCheck className=\"BsPatchCheck\" /></div>\r\n            <div className=\"contentModalContainer\">\r\n                <h2 id=\"h2Content\">Thanks! You're all signed up {capitalizedName}!</h2>\r\n                <p id=\"paraContent\">Click below to claim your free download!</p>\r\n                <a href={gitSheet} download=\"gitSheet\" className=\"downloadBtn\">Download</a>\r\n            </div>\r\n            </div>\r\n            );\r\n    }\r\n  }","import React from \"react\";\r\nimport './formSiteCss.css';\r\nimport {BsCheck} from 'react-icons/bs';\r\nimport ModalForm from '../formSite/modalForm';\r\n\r\nfunction Nav(){\r\n    return (\r\n        <nav>\r\n            <p className=\"userReg\">User-Registration</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport function Content(){\r\n\r\n    const[openModaL, setOpenModal]= React.useState(false)\r\n\r\n    const [formData, setFormData] = React.useState({\r\n        firstName: \"\",\r\n        lastName:\"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        joinMembership: false\r\n    })\r\n\r\n    function handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value\r\n        }))\r\n    }\r\n\r\n    function handleSubmit(event) {            \r\n\r\n            event.preventDefault()\r\n        if (formData.firstName.length > 2 & formData.lastName.length > 0 & formData.email.includes(\"@\") & formData.password===formData.passwordConfirm & formData.passwordConfirm.length>2){\r\n            setOpenModal(prevModal=>!prevModal)\r\n            console.log(\"modal open\")\r\n        }\r\n        else {\r\n            setOpenModal(false)\r\n        }\r\n    }\r\n\r\n    function closeModal(){\r\n        setOpenModal(false)\r\n\r\n        setFormData({\r\n        firstName: \"\",\r\n        lastName:\"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        joinMembership: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"spanAll\">\r\n            <div className=\"circleOverlay\">\r\n                <div className=\"signUp\">\r\n                    <h1>Sign up today</h1>\r\n                    <p>Enter Details below to continue!</p>\r\n                </div>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>        \r\n                <div className=\"spanAllContainer\">\r\n                <div className=\"registerName\">\r\n                   <h2 className=\"registerNameh2\"> {formData.firstName} {formData.lastName} </h2>\r\n                </div>\r\n    \r\n                    {openModaL && <ModalForm open= {openModaL} close={closeModal} title={formData.firstName}/>} \r\n                \r\n                <div className=\"contentEl\">\r\n                    <div className=\"eachBox\"><input type=\"firstName\" placeholder='First Name' className='formInputs' name=\"firstName\" onChange={handleChange} value={formData.firstName}></input>{!openModaL &&<BsCheck className={formData.firstName.length > 2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"lastName\" placeholder='Last Name' className='formInputs' name=\"lastName\" onChange={handleChange} value={formData.lastName}></input>{!openModaL && <BsCheck className={formData.lastName.length > 0 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"email\" placeholder='Email' className='formInputs' name=\"email\" onChange={handleChange} value={formData.email}></input>{!openModaL && <BsCheck className={formData.email.includes(\"@\") ? \"greenTick\" : \"blackTick\"}/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"password\" placeholder='Password' className='formInputs' name=\"password\" onChange={handleChange} value={formData.password}></input> {!openModaL && <BsCheck className={formData.password.length > 2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"password\" placeholder='ConfirmPassword' className='formInputs' name=\"passwordConfirm\" onChange={handleChange} value={formData.passwordConfirm}></input>{!openModaL && <BsCheck className={formData.password===formData.passwordConfirm && formData.passwordConfirm.length>2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                </div>\r\n                <div>\r\n                    {formData.password!==formData.passwordConfirm && formData.passwordConfirm.length>2 && <p className=\"pwordError\">*Passwords Do Not Match</p>} \r\n                </div>\r\n                <div className=\"formMarketing\">\r\n                    <input\r\n                        id=\"joinMembership\"\r\n                        type=\"checkbox\"\r\n                        name=\"joinMembership\"\r\n                        onChange={handleChange}\r\n                        checked={formData.joinMembership}\r\n                    />\r\n                    <label htmlFor=\"joinMembership\">I want to receive exclusive content</label>\r\n                </div>\r\n{}\r\n                {formData.firstName.length > 2 && formData.lastName.length > 0 && formData.email.includes(\"@\") && formData.password===formData.passwordConfirm && formData.passwordConfirm.length>2 && <button className=\"submitBtn\">Sign Up</button>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction Footer (){\r\n    return(\r\n        <div>\r\n           <h3> Copyright Â© 2022. All right reserved Bilal Musa. </h3>\r\n        </div>\r\n    )\r\n}\r\nexport default function formSite() {\r\n\r\n    return (\r\n    <div>\r\n        <div><Nav /></div>\r\n            <div className=\"container\">\r\n            <Content />\r\n            </div>\r\n        <div className=\"Footer\"> <Footer /> </div>\r\n    </div>  \r\n    );\r\n  }","import logo from './logo.svg';\nimport './App.css';\nimport FormSite from './formSite/formsMock';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <FormSite />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}