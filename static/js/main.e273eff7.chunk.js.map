{"version":3,"sources":["formSite/face2form.jfif","logo.svg","formSite/modalForm.js","formSite/formsMock.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","modalForm","props","open","react_default","a","createElement","className","onClick","close","index_esm","id","title","Nav","Content","_React$useState","React","useState","firstName","lastName","email","password","passwordConfirm","joinMembership","_React$useState2","Object","slicedToArray","formData","setFormData","handleChange","event","console","log","_event$target","target","name","value","type","checked","prevFormData","objectSpread","defineProperty","_React$useState3","_React$useState4","openModaL","setOpenModal","onSubmit","preventDefault","length","includes","prevModal","src","face2form","placeholder","onChange","htmlFor","Footer","formSite","App","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e273eff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face2form.3d16735a.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\nimport {BsPatchCheck} from 'react-icons/bs';\r\nimport './modalFormCss.css';\r\n\r\n\r\nexport default function modalForm(props) {\r\n\r\n    if (!props.open){\r\n        return null\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"modalContainer\">\r\n            <div className=\"closeBtn\"><span className=\"closeBtnSpan\" onClick={props.close}>x</span></div>\r\n                <div className=\"checkContainer\"><BsPatchCheck className=\"BsPatchCheck\" /></div>\r\n            <div className=\"contentModalContainer\">\r\n                <h2 id=\"h2Content\">Thanks! You're all signed up {props.title}!</h2>\r\n                <p id=\"paraContent\">Check your Inbox! A confirmation email is on its way...</p>\r\n            </div>\r\n            </div>\r\n            );\r\n    }\r\n  }","import React from \"react\";\r\nimport './formSiteCss.css';\r\nimport face2form from '../formSite/face2form.jfif'\r\nimport { FaGlobeAmericas } from 'react-icons/fa';\r\nimport {BsCheck} from 'react-icons/bs';\r\nimport ModalForm from '../formSite/modalForm';\r\n\r\nfunction Nav(){\r\n    return (\r\n        <nav>\r\n            <p className=\"userReg\">User-Registration</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport function Content(){\r\n    const [formData, setFormData] = React.useState({\r\n        firstName: \"\",\r\n        lastName:\"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        joinMembership: false\r\n    })\r\n\r\n    function handleChange(event) {\r\n        console.log (event)\r\n        const {name, value, type, checked} = event.target\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value\r\n        }))\r\n    }\r\n\r\n    const[openModaL, setOpenModal]= React.useState(false)\r\n\r\n    function handleSubmit(event) {            \r\n\r\n            event.preventDefault()\r\n        if (formData.firstName.length > 2 & formData.lastName.length > 2 & formData.email.includes(\"@\") & formData.password===formData.passwordConfirm & formData.passwordConfirm.length>2){\r\n            setOpenModal(prevModal=>!prevModal)\r\n            console.log(\"success\")\r\n        }\r\n        else {\r\n            console.log(\"not complete\")\r\n        }\r\n    }\r\n    console.log(openModaL)\r\n\r\n    function closeModal(){\r\n        setOpenModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"spanAll\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"profileImage\">\r\n                    <img src={face2form} className='memeImg' /> \r\n                </div>\r\n                <div className=\"spanAllContainer\">\r\n                <div className=\"registerName\">\r\n                   <h2 className=\"registerNameh2\"> {formData.firstName} {formData.lastName} </h2>\r\n                </div>\r\n                        {openModaL && <ModalForm open= {openModaL} close={closeModal} title={formData.firstName}/>} \r\n            \r\n                <div className=\"contentEl\">\r\n                    <div className=\"eachBox\"><input type=\"firstName\" placeholder='First Name' className='formInputs' name=\"firstName\" onChange={handleChange} value={formData.firstName}></input>{!openModaL &&<BsCheck className={formData.firstName.length > 2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"lastName\" placeholder='Last Name' className='formInputs' name=\"lastName\" onChange={handleChange} value={formData.lastName}></input>{!openModaL && <BsCheck className={formData.lastName.length > 2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"email\" placeholder='Email' className='formInputs' name=\"email\" onChange={handleChange} value={formData.email}></input>{!openModaL && <BsCheck className={formData.email.includes(\"@\") ? \"greenTick\" : \"blackTick\"}/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"password\" placeholder='Password' className='formInputs' name=\"password\" onChange={handleChange} value={formData.password}></input> {!openModaL && <BsCheck className={formData.password.length > 2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                    <div className=\"eachBox\"><input type=\"password\" placeholder='ConfirmPassword' className='formInputs' name=\"passwordConfirm\" onChange={handleChange} value={formData.passwordConfirm}></input>{!openModaL && <BsCheck className={formData.password===formData.passwordConfirm && formData.passwordConfirm.length>2 ? \"greenTick\" : \"blackTick\" }/>}</div>\r\n                </div>\r\n    {formData.password!==formData.passwordConfirm && formData.passwordConfirm.length>2 && <p className=\"pwordError\">*Passwords Do Not Match</p>} \r\n                <div className=\"genderId\">\r\n                    <label htmlFor=\"gender\" className=\"gender\">Gender</label>\r\n                    <select className=\"genderSelect\">\r\n                    {/* onChange= { (e) =>  setFormData(prevFormData => {\r\n                        return ({...prevFormData})\r\n                                }\r\n                            )\r\n                        } */}\r\n                    <option value=\"\">--Choose--</option>\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* How to use minlength validator to validate password lenfth etc? */}\r\n                <div className=\"form--marketing\">\r\n                    <input\r\n                        id=\"joinMembership\"\r\n                        type=\"checkbox\"\r\n                        name=\"joinMembership\"\r\n                        onChange={handleChange}\r\n                        checked={formData.joinMembership}\r\n                    />\r\n                    <label htmlFor=\"joinMembership\">I want to sign up to paid Membership</label>\r\n                </div>\r\n                {formData.password===formData.passwordConfirm && formData.passwordConfirm.length>2 && <button className=\"submitBtn\">Submit</button>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n\r\n        // <div className=\"spanAll\">\r\n        //     <div className=\"box1\">\r\n        //         <h2>hi</h2>\r\n        //     </div>\r\n\r\n        //     <div className=\"box2\">\r\n        //     <h1>hello baby 2</h1>\r\n        //     </div>\r\n\r\n        //     <div className=\"box3\">\r\n        //     <h1>hello baby 3</h1>\r\n        //     </div>\r\n\r\n        //     <div className=\"box4\">\r\n        //     <h1>hello baby 4</h1>\r\n        //     </div>\r\n        // </div>\r\n       \r\n    )\r\n}\r\n\r\nfunction Footer (){\r\n    return(\r\n        <div>\r\n           <h3> Copyright © 2022. All right reserved Bilal Musa. </h3>\r\n        </div>\r\n    )\r\n}\r\nexport default function formSite() {\r\n\r\n    return (\r\n    <div>\r\n        <div><Nav /></div>\r\n            <div className=\"container\">\r\n            <Content />\r\n            </div>\r\n        <div className=\"Footer\"> <Footer /> </div>\r\n    </div>  \r\n    );\r\n  }","import logo from './logo.svg';\nimport './App.css';\nimport FormSite from './formSite/formsMock';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <FormSite />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}